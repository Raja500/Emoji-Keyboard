apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'io.fabric'

def localPropertiesFile = rootProject.file("local.properties")
def localProperties = new Properties()
localProperties.load(new FileInputStream(localPropertiesFile))

android {
    compileSdkVersion 26
    buildToolsVersion '26.0.2'
    defaultConfig {
        applicationId "com.theokanning.emojikeyboard"
        minSdkVersion 21
        targetSdkVersion 26
        versionCode 2
        versionName "0.1.1"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        debug {
            keyAlias localProperties['debugKeyAlias']
            keyPassword localProperties['debugKeyPassword']
            storeFile file(localProperties['debugStoreFile'])
            storePassword localProperties['debugStorePassword']
        }
        release {
            keyAlias localProperties['releaseKeyAlias']
            keyPassword localProperties['releaseKeyPassword']
            storeFile file(localProperties['releaseStoreFile'])
            storePassword localProperties['releaseStorePassword']
        }
    }
    defaultConfig {
        buildConfigField "String", "API_KEY", localProperties['api_key']
        manifestPlaceholders = [fabricKey:localProperties['fabric_key']]
    }
    buildTypes {
        debug {
            applicationIdSuffix ".debug"
        }
        release {
            minifyEnabled false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

repositories {
    jcenter()
    maven { url "https://maven.google.com"}
    maven { url 'https://maven.fabric.io/public' }
}

ext {
    retrofitVersion = '2.3.0'
    okhttpVersion = '3.9.0'
    butterknifeVersion = '8.8.1'
}

dependencies {

    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    compile 'com.wonderkiln:camerakit:0.11.1'
    compile 'com.vdurmont:emoji-java:3.3.0'

    compile('com.crashlytics.sdk.android:crashlytics:2.7.0@aar') {
        transitive = true;
    }

    // butterknife
    compile "com.jakewharton:butterknife:$butterknifeVersion"
    kapt "com.jakewharton:butterknife-compiler:$butterknifeVersion"

    // okhttp
    compile "com.squareup.okhttp3:okhttp:$okhttpVersion"
    compile "com.squareup.okhttp3:logging-interceptor:$okhttpVersion"

    // retrofit
    compile "com.squareup.retrofit2:retrofit:$retrofitVersion"
    compile "com.squareup.retrofit2:converter-gson:$retrofitVersion"

    testCompile 'junit:junit:4.12'
}
